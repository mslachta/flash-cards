{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cards: {}\n};\nconst sliceOptions = {\n  name: \"cards\",\n  initialState: initialState,\n  reducers: {\n    addCard: (state, action) => {\n      return {\n        ...state,\n        cards: {\n          ...state.cards,\n          [action.payload.id]: {\n            id: action.payload.id,\n            front: action.payload.front,\n            back: action.payload.back\n          }\n        }\n      };\n    }\n  }\n};\nexport const cardsSlice = createSlice(sliceOptions);\n\n// [Step 14] Has a selector that returns a card with the given id\nexport const selectCardsById = selectedId => state => {\n  return Object.keys(state.cards.cards).filter(key => key === selectedId).reduce((obj, key) => {\n    obj[key] = state.cards.cards[key];\n    return obj;\n  }, {});\n};\nexport const {\n  addCard\n} = cardsSlice.actions;\nexport default cardsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cards","sliceOptions","name","reducers","addCard","state","action","payload","id","front","back","cardsSlice","selectCardsById","selectedId","Object","keys","filter","key","reduce","obj","actions","reducer"],"sources":["/Users/martin/Downloads/codecademy_20231009_flashcards-master/src/features/cards/cardsSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  cards: {},\n};\n\nconst sliceOptions = {\n  name: \"cards\",\n  initialState: initialState,\n  reducers: {\n    addCard: (state, action) => {\n      return {\n        ...state,\n        cards: {\n          ...state.cards,\n          [action.payload.id]: {\n            id: action.payload.id,\n            front: action.payload.front,\n            back: action.payload.back,\n          },\n        },\n      };\n    },\n  },\n};\n\nexport const cardsSlice = createSlice(sliceOptions);\n\n// [Step 14] Has a selector that returns a card with the given id\nexport const selectCardsById = (selectedId) => (state) => {\n  return Object.keys(state.cards.cards)\n    .filter((key) => key === selectedId)\n    .reduce((obj, key) => {\n      obj[key] = state.cards.cards[key];\n      return obj;\n    }, {});\n};\n\nexport const { addCard } = cardsSlice.actions;\nexport default cardsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,OAAO;EACbH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,OAAO;QACL,GAAGD,KAAK;QACRL,KAAK,EAAE;UACL,GAAGK,KAAK,CAACL,KAAK;UACd,CAACM,MAAM,CAACC,OAAO,CAACC,EAAE,GAAG;YACnBA,EAAE,EAAEF,MAAM,CAACC,OAAO,CAACC,EAAE;YACrBC,KAAK,EAAEH,MAAM,CAACC,OAAO,CAACE,KAAK;YAC3BC,IAAI,EAAEJ,MAAM,CAACC,OAAO,CAACG;UACvB;QACF;MACF,CAAC;IACH;EACF;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGb,WAAW,CAACG,YAAY,CAAC;;AAEnD;AACA,OAAO,MAAMW,eAAe,GAAIC,UAAU,IAAMR,KAAK,IAAK;EACxD,OAAOS,MAAM,CAACC,IAAI,CAACV,KAAK,CAACL,KAAK,CAACA,KAAK,CAAC,CAClCgB,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,UAAU,CAAC,CACnCK,MAAM,CAAC,CAACC,GAAG,EAAEF,GAAG,KAAK;IACpBE,GAAG,CAACF,GAAG,CAAC,GAAGZ,KAAK,CAACL,KAAK,CAACA,KAAK,CAACiB,GAAG,CAAC;IACjC,OAAOE,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAM;EAAEf;AAAQ,CAAC,GAAGO,UAAU,CAACS,OAAO;AAC7C,eAAeT,UAAU,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}