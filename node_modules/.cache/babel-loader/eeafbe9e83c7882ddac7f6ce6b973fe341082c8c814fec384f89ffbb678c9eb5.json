{"ast":null,"code":"import { createAction, createSlice } from '@reduxjs/toolkit';\nconst addNewQuiz = createAction('addNewQuiz');\nconst newQuizAdded = action => {\n  return action.name === 'addQuiz';\n};\nconst sliceOptions = {\n  name: \"topics\",\n  // [Step 5] Has an initial state consisting of an object that includes one empty topics property \n  initialState: {\n    topics: {}\n  },\n  reducers: {\n    // [Step 5] Has an addTopic action, which stores the payload values in the state as a new topic object\n    addTopic: (state, action) => {\n      return {\n        ...state,\n        topics: {\n          ...state.topics,\n          [action.payload.id]: {\n            id: action.payload.id,\n            name: action.payload.name,\n            icon: action.payload.icon,\n            // [Step 5] Each topc object should have a quizIds property\n            quizIds: []\n          }\n        }\n      };\n    }\n  },\n  // [Step 10] Add an action to your topic's slice that adds a quiz's id to the quizIds array of the topic with wqhich the newly created quiz is associated\n  extraReducers: builder => {\n    builder.addMatcher(newQuizAdded, (state, action) => {\n      const topic = state.topics.find(topic => topic.id === action.payload.topicId);\n      if (topic) {\n        return {\n          ...state,\n          topics: {\n            ...state.topics,\n            [action.payload.topicId]: {\n              quizIds: state.topics.quizIds.push(action.payload.id)\n            }\n          }\n        };\n      }\n    }).addDefaultCase((state, action) => {});\n  }\n};\n\n// [Step 5] Create a slice named topicsSlice, and export the action creators & reducer\nexport const topicsSlice = createSlice(sliceOptions);\n\n// [Step 5] Create selector that selects the topics object nested within initialState, and export the selector\nexport const selectTopics = state => state.topics;\n\n// [Step 8] Need to export the addTopic action\nexport const {\n  addTopic\n} = topicsSlice.actions;\nexport default topicsSlice.reducer;","map":{"version":3,"names":["createAction","createSlice","addNewQuiz","newQuizAdded","action","name","sliceOptions","initialState","topics","reducers","addTopic","state","payload","id","icon","quizIds","extraReducers","builder","addMatcher","topic","find","topicId","push","addDefaultCase","topicsSlice","selectTopics","actions","reducer"],"sources":["/Users/martin/Downloads/codecademy_20231009_flashcards-master/src/features/topics/topicsSlice.js"],"sourcesContent":["import { createAction, createSlice } from '@reduxjs/toolkit'\n\nconst addNewQuiz = createAction('addNewQuiz')\n\nconst newQuizAdded = (action) => {\n    return action.name === 'addQuiz'\n}\n\n\nconst sliceOptions = {\n    name: \"topics\",\n    // [Step 5] Has an initial state consisting of an object that includes one empty topics property \n    initialState: {\n        topics: {}\n    },\n    reducers: {\n        // [Step 5] Has an addTopic action, which stores the payload values in the state as a new topic object\n        addTopic: (state, action) => {\n            return {\n                ...state,\n                topics: {\n                    ...state.topics,\n                    [action.payload.id]: {\n                        id: action.payload.id,\n                        name: action.payload.name,\n                        icon: action.payload.icon,\n                        // [Step 5] Each topc object should have a quizIds property\n                        quizIds: []\n                    }\n                }\n            }\n        }\n    },\n    // [Step 10] Add an action to your topic's slice that adds a quiz's id to the quizIds array of the topic with wqhich the newly created quiz is associated\n    extraReducers: (builder) => {\n        builder\n            .addMatcher(newQuizAdded, (state, action) => {\n                const topic = state.topics.find(topic => topic.id === action.payload.topicId)\n                if (topic) {\n                    return {\n                        ...state,\n                        topics: {\n                            ...state.topics,\n                            [action.payload.topicId]: {\n                                quizIds: state.topics.quizIds.push(action.payload.id)\n                            }\n                        }\n                    }\n                }\n\n            })\n            .addDefaultCase((state, action) => {})\n    }\n}\n\n// [Step 5] Create a slice named topicsSlice, and export the action creators & reducer\nexport const topicsSlice = createSlice(sliceOptions)\n\n// [Step 5] Create selector that selects the topics object nested within initialState, and export the selector\nexport const selectTopics = (state) => state.topics\n\n// [Step 8] Need to export the addTopic action\nexport const { addTopic } = topicsSlice.actions\n\nexport default topicsSlice.reducer"],"mappings":"AAAA,SAASA,YAAY,EAAEC,WAAW,QAAQ,kBAAkB;AAE5D,MAAMC,UAAU,GAAGF,YAAY,CAAC,YAAY,CAAC;AAE7C,MAAMG,YAAY,GAAIC,MAAM,IAAK;EAC7B,OAAOA,MAAM,CAACC,IAAI,KAAK,SAAS;AACpC,CAAC;AAGD,MAAMC,YAAY,GAAG;EACjBD,IAAI,EAAE,QAAQ;EACd;EACAE,YAAY,EAAE;IACVC,MAAM,EAAE,CAAC;EACb,CAAC;EACDC,QAAQ,EAAE;IACN;IACAC,QAAQ,EAAEA,CAACC,KAAK,EAAEP,MAAM,KAAK;MACzB,OAAO;QACH,GAAGO,KAAK;QACRH,MAAM,EAAE;UACJ,GAAGG,KAAK,CAACH,MAAM;UACf,CAACJ,MAAM,CAACQ,OAAO,CAACC,EAAE,GAAG;YACjBA,EAAE,EAAET,MAAM,CAACQ,OAAO,CAACC,EAAE;YACrBR,IAAI,EAAED,MAAM,CAACQ,OAAO,CAACP,IAAI;YACzBS,IAAI,EAAEV,MAAM,CAACQ,OAAO,CAACE,IAAI;YACzB;YACAC,OAAO,EAAE;UACb;QACJ;MACJ,CAAC;IACL;EACJ,CAAC;EACD;EACAC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,UAAU,CAACf,YAAY,EAAE,CAACQ,KAAK,EAAEP,MAAM,KAAK;MACzC,MAAMe,KAAK,GAAGR,KAAK,CAACH,MAAM,CAACY,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACN,EAAE,KAAKT,MAAM,CAACQ,OAAO,CAACS,OAAO,CAAC;MAC7E,IAAIF,KAAK,EAAE;QACP,OAAO;UACH,GAAGR,KAAK;UACRH,MAAM,EAAE;YACJ,GAAGG,KAAK,CAACH,MAAM;YACf,CAACJ,MAAM,CAACQ,OAAO,CAACS,OAAO,GAAG;cACtBN,OAAO,EAAEJ,KAAK,CAACH,MAAM,CAACO,OAAO,CAACO,IAAI,CAAClB,MAAM,CAACQ,OAAO,CAACC,EAAE;YACxD;UACJ;QACJ,CAAC;MACL;IAEJ,CAAC,CAAC,CACDU,cAAc,CAAC,CAACZ,KAAK,EAAEP,MAAM,KAAK,CAAC,CAAC,CAAC;EAC9C;AACJ,CAAC;;AAED;AACA,OAAO,MAAMoB,WAAW,GAAGvB,WAAW,CAACK,YAAY,CAAC;;AAEpD;AACA,OAAO,MAAMmB,YAAY,GAAId,KAAK,IAAKA,KAAK,CAACH,MAAM;;AAEnD;AACA,OAAO,MAAM;EAAEE;AAAS,CAAC,GAAGc,WAAW,CAACE,OAAO;AAE/C,eAAeF,WAAW,CAACG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}